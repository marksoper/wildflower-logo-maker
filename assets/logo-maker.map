{"version":3,"sources":["vendor/ember-cli/app-prefix.js","logo-maker/adapters/application.js","logo-maker/app.js","logo-maker/components/fabric-canvas.js","logo-maker/components/font-dropdown.js","logo-maker/components/jurisdiction-dropdown.js","logo-maker/components/letter-split.js","logo-maker/components/logo-view.js","logo-maker/components/num-students-by-sq-ft.js","logo-maker/components/palette-box.js","logo-maker/components/sqft-dropdown.js","logo-maker/components/student-age-dropdown.js","logo-maker/components/student-count-dropdown.js","logo-maker/components/teacher-requirements.js","logo-maker/controllers/jurisdiction.js","logo-maker/controllers/logo.js","logo-maker/initializers/app-version.js","logo-maker/initializers/export-application-global.js","logo-maker/models/MA.js","logo-maker/models/flower.js","logo-maker/models/font.js","logo-maker/models/jurisdiction.js","logo-maker/models/logo.js","logo-maker/models/palette.js","logo-maker/router.js","logo-maker/routes/application.js","logo-maker/routes/jurisdiction/index.js","logo-maker/routes/jurisdiction/view.js","logo-maker/routes/new.js","logo-maker/templates/application.js","logo-maker/templates/components/font-dropdown.js","logo-maker/templates/components/jurisdiction-dropdown.js","logo-maker/templates/components/letter-split.js","logo-maker/templates/components/logo-view.js","logo-maker/templates/components/num-students-by-sq-ft.js","logo-maker/templates/components/palette-box.js","logo-maker/templates/components/sqft-dropdown.js","logo-maker/templates/components/student-age-dropdown.js","logo-maker/templates/components/student-count-dropdown.js","logo-maker/templates/components/teacher-requirements.js","logo-maker/templates/jurisdiction.js","logo-maker/templates/jurisdiction/index.js","logo-maker/templates/jurisdiction/view.js","logo-maker/templates/jurisdictions.js","logo-maker/templates/logo.js","logo-maker/tests/adapters/application.jshint.js","logo-maker/tests/app.jshint.js","logo-maker/tests/components/fabric-canvas.jshint.js","logo-maker/tests/components/font-dropdown.jshint.js","logo-maker/tests/components/jurisdiction-dropdown.jshint.js","logo-maker/tests/components/letter-split.jshint.js","logo-maker/tests/components/logo-view.jshint.js","logo-maker/tests/components/num-students-by-sq-ft.jshint.js","logo-maker/tests/components/palette-box.jshint.js","logo-maker/tests/components/sqft-dropdown.jshint.js","logo-maker/tests/components/student-age-dropdown.jshint.js","logo-maker/tests/components/student-count-dropdown.jshint.js","logo-maker/tests/components/teacher-requirements.jshint.js","logo-maker/tests/controllers/jurisdiction.jshint.js","logo-maker/tests/controllers/logo.jshint.js","logo-maker/tests/helpers/resolver.js","logo-maker/tests/helpers/resolver.jshint.js","logo-maker/tests/helpers/start-app.js","logo-maker/tests/helpers/start-app.jshint.js","logo-maker/tests/models/MA.jshint.js","logo-maker/tests/models/flower.jshint.js","logo-maker/tests/models/font.jshint.js","logo-maker/tests/models/jurisdiction.jshint.js","logo-maker/tests/models/logo.jshint.js","logo-maker/tests/models/palette.jshint.js","logo-maker/tests/router.jshint.js","logo-maker/tests/routes/application.jshint.js","logo-maker/tests/routes/jurisdiction/index.jshint.js","logo-maker/tests/routes/jurisdiction/view.jshint.js","logo-maker/tests/routes/new.jshint.js","logo-maker/tests/test-helper.js","logo-maker/tests/test-helper.jshint.js","logo-maker/tests/unit/components/font-dropdown-test.js","logo-maker/tests/unit/components/font-dropdown-test.jshint.js","logo-maker/tests/unit/components/num-students-by-sq-ft-test.js","logo-maker/tests/unit/components/num-students-by-sq-ft-test.jshint.js","logo-maker/tests/unit/components/sqft-dropdown-test.js","logo-maker/tests/unit/components/sqft-dropdown-test.jshint.js","logo-maker/tests/unit/components/student-age-dropdown-test.js","logo-maker/tests/unit/components/student-age-dropdown-test.jshint.js","logo-maker/tests/unit/components/student-count-dropdown-test.js","logo-maker/tests/unit/components/student-count-dropdown-test.jshint.js","logo-maker/tests/unit/components/teacher-requirements-test.js","logo-maker/tests/unit/components/teacher-requirements-test.jshint.js","logo-maker/tests/unit/models/flower-test.js","logo-maker/tests/unit/models/flower-test.jshint.js","logo-maker/tests/unit/models/font-test.js","logo-maker/tests/unit/models/font-test.jshint.js","logo-maker/tests/unit/models/logo-test.js","logo-maker/tests/unit/models/logo-test.jshint.js","logo-maker/tests/unit/models/palette-test.js","logo-maker/tests/unit/models/palette-test.jshint.js","logo-maker/tests/views/application.jshint.js","logo-maker/views/application.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('logo-maker/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].FixtureAdapter;\n\n});","define('logo-maker/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'logo-maker/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default'],\n    LOG_TRANSITIONS: true\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('logo-maker/components/fabric-canvas', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    /*global fabric,$*/\n    function placeFlower(flower, index) {\n\n        fabric.Image.fromURL(flower.get('location'), (function (img) {\n\n            img.set({\n                left: this.canvasFlowers.getLeft() + 50 * index,\n                top: this.canvas.height / 2 - 35,\n                hasBorders: false\n            });\n\n            this.canvasFlowers.addWithUpdate(img).centerH();\n        }).bind(this));\n    }\n\n    exports['default'] = Ember['default'].Component.extend({\n        tagName: 'canvas',\n        didInsertElement: function didInsertElement() {\n            var h = $('#content').height(),\n                w = $('#content').width();\n\n            this.canvas = new fabric.StaticCanvas(this.get('element'), {\n                width: w,\n                height: h\n            });\n\n            this.canvasFlowers = new fabric.Group([]);\n            this.canvasTitle = new fabric.Group([]);\n            this.canvasSubtitle = new fabric.Group([new fabric.Text('Montessori School', {\n                left: 0,\n                hasBorders: false\n            })], {\n                visible: false\n            });\n\n            this.canvas.add(this.canvasFlowers).add(this.canvasTitle).add(this.canvasSubtitle);\n\n            this.canvasFlowers.centerH();\n            this.canvasTitle.centerH();\n            this.canvasSubtitle.centerH();\n        },\n        updateName: Ember['default'].observer('name', function (fc, prop) {\n            var title = new fabric.Text(fc.get(prop), {\n                left: 0,\n                top: this.canvas.height / 2 + 35,\n                hasBorders: false\n            });\n\n            this.canvasTitle.remove.apply(this.canvasTitle, this.canvasTitle.getObjects());\n            this.canvasTitle.addWithUpdate(title).centerH();\n\n            this.canvasSubtitle.setTop(this.canvas.height / 2 + (title.height + 35));\n            if (!this.canvasSubtitle.getVisible()) {\n                this.canvasSubtitle.setVisible(true);\n            }\n        }),\n        updateFlowers: Ember['default'].observer('flowers', function (a) {\n            var selectedFlowers = a.get('flowers');\n            this.canvasFlowers.remove.apply(this.canvasFlowers, this.canvasFlowers.getObjects());\n            selectedFlowers.forEach(placeFlower, this);\n\n            if (this.canvasFlowers.isEmpty()) {\n                this.canvas.renderAll();\n            }\n        }),\n        updateFont: Ember['default'].observer('font', function () {}),\n        updatePalette: Ember['default'].observer('palette', function () {}),\n        updateArrangement: Ember['default'].observer('arrangement', function () {})\n    });\n\n    //this.canvas update font\n\n    //this.canvas update palette\n\n    //this.canvas update arrangement\n\n});","define('logo-maker/components/font-dropdown', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        id: 'filter',\n        active: false,\n        classNames: ['dropdown'],\n        classNameBindings: ['active'],\n        click: function click() {\n            this.set('active', !this.get('active'));\n            return false;\n        },\n        actions: {\n            selectFont: function selectFont(font) {\n                this.sendAction('action', font);\n            }\n        }\n    });\n\n});","define('logo-maker/components/jurisdiction-dropdown', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    id: 'filter',\n    active: false,\n    classNames: ['dropdown'],\n    classNameBindings: ['active'],\n    click: function click() {\n      this.set('active', !this.get('active'));\n      return false;\n    },\n    actions: {\n      setJurisdiction: function setJurisdiction(j) {\n        this.set('selectedJurisdiction', j);\n      }\n    }\n  });\n\n});","define('logo-maker/components/letter-split', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    function linearMap(low1, hi1, point1, low2, hi2) {\n        var point2;\n\n        point2 = (low2 * point1 - low1 * low2 + hi1 * hi2 - hi2 * point1) / (hi1 - low1);\n        return point2;\n    }\n\n    exports['default'] = Ember['default'].Component.extend({\n        classNamesBindings: ['class'],\n        attributeBindings: ['style'],\n        style: (function () {\n            if (this.get('text').match(/montessori/i) || this.get('size') === 'small') {\n                return '';\n            }\n\n            var letterCount = this.get('text').length,\n                sizeRange = [48, 110],\n                countRange = [5, 13],\n                size;\n\n            if (letterCount <= 5) {\n                size = Math.max.apply(null, sizeRange);\n            } else if (letterCount >= 13) {\n                size = Math.min.apply(null, sizeRange);\n            } else {\n                size = linearMap(countRange[0], countRange[1], letterCount, sizeRange[0], sizeRange[1]);\n            }\n\n            return 'font-size: ' + size + 'px;';\n        }).property('text'),\n        letters: (function () {\n            var _this = this;\n\n            var letters = this.get('text').split(''),\n                colors = this.get('palette').colors,\n                colorsCount = colors.length;\n\n            return letters.map(function (letter, index) {\n                var color;\n\n                if (colorsCount === 2) {\n                    if (_this.get('text').match(/montessori/i)) {\n                        color = 'color: ' + colors[0] + ';';\n                    } else {\n                        color = 'color: ' + colors[1] + ';';\n                    }\n                } else {\n                    color = 'color: ' + colors[index % colorsCount] + ';';\n                }\n\n                return {\n                    letter: letter,\n                    colorStyle: color\n                };\n            });\n        }).property('palette', 'text')\n    });\n\n});","define('logo-maker/components/logo-view', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Component.extend({\n        classNames: ['logo'],\n        classNameBindings: ['arrangement', 'size'],\n        attributeBindings: ['main:id'],\n        main: (function () {\n            return this.get('view') === 'main' ? 'logo' : '';\n        }).property('view')\n    });\n\n});","define('logo-maker/components/num-students-by-sq-ft', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var calculateNumStudentsFromSqFt = function calculateNumStudentsFromSqFt(sqft) {\n    return Math.floor(sqft / 50);\n  };\n\n  exports['default'] = Ember['default'].Component.extend({\n    requiredTeachers: null,\n    actions: {\n      setSqFt: function setSqFt(sqft) {\n        this.set('sqft', sqft);\n        this.set('studentCount', calculateNumStudentsFromSqFt(this.sqft.value));\n      }\n    },\n    sqfts: (function () {\n      var sqfts = [];\n      var i = 1;\n      while (i <= 30) {\n        sqfts.push({\n          id: i * 50,\n          value: i * 50\n        });\n        i += 1;\n      }\n      return sqfts;\n    })()\n  });\n\n});","define('logo-maker/components/palette-box', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    /*global $*/\n    exports['default'] = Ember['default'].Component.extend({\n        classNames: 'grid-item',\n        isBigPalette: (function () {\n            return this.get('palette.colors').length > 2;\n        }).property('palette.colors'),\n        didInsertElement: function didInsertElement() {\n            var spans = $(this.get('element')).find('span');\n\n            this.get('palette.colors').forEach(function (color, i) {\n                if ($(spans[i]).hasClass('two-color')) {\n                    if (i === 0) {\n                        $(spans[i]).css('border-bottom-color', color);\n                    } else {\n                        $(spans[i]).css('border-top-color', color);\n                    }\n                } else {\n                    $(spans[i]).css('background-color', color);\n                }\n            });\n        },\n        actions: {\n            setPalette: function setPalette(palette) {\n                this.sendAction('setPalette', palette);\n            }\n        }\n    });\n\n});","define('logo-maker/components/sqft-dropdown', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    id: 'filter',\n    active: false,\n    classNames: ['dropdown'],\n    classNameBindings: ['active'],\n    click: function click() {\n      this.set('active', !this.get('active'));\n      return false;\n    },\n    actions: {\n      selectSqFt: function selectSqFt(j) {\n        this.set('selectedSqFt', j);\n        this.sendAction('action', j);\n      }\n    }\n  });\n\n});","define('logo-maker/components/student-age-dropdown', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    id: 'filter',\n    active: false,\n    classNames: ['dropdown'],\n    classNameBindings: ['active'],\n    click: function click() {\n      this.set('active', !this.get('active'));\n      return false;\n    },\n    actions: {\n      selectStudentAge: function selectStudentAge(j) {\n        this.set('selectedStudentAge', j);\n        this.sendAction('action', j);\n      }\n    }\n  });\n\n});","define('logo-maker/components/student-count-dropdown', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    id: 'filter',\n    active: false,\n    classNames: ['dropdown'],\n    classNameBindings: ['active'],\n    click: function click() {\n      this.set('active', !this.get('active'));\n      return false;\n    },\n    actions: {\n      selectStudentCount: function selectStudentCount(j) {\n        this.set('selectedStudentCount', j);\n        this.sendAction('action', j);\n      }\n    }\n  });\n\n});","define('logo-maker/components/teacher-requirements', ['exports', 'ember', 'logo-maker/models/MA'], function (exports, Ember, MA) {\n\n  'use strict';\n\n  var calculateSquareFootage = function calculateSquareFootage(studentCount) {\n    return 50 * studentCount;\n  };\n\n  var calculateRequiredTeachers = function calculateRequiredTeachers(ageRange, studentCount, licensedCapacity) {\n    if (!ageRange || !studentCount) {\n      return null;\n    }\n    var tooManyStudentsError;\n    var numberOfTeachersRequired;\n    if (studentCount > ageRange.maxGroupSize) {\n      tooManyStudentsError = true;\n    } else {\n      ageRange.educatorsRequiredPerNumberOfChildren.forEach(function (range) {\n        if (studentCount >= range[0][0] && studentCount <= range[0][1]) {\n          numberOfTeachersRequired = range[1];\n        }\n      });\n    }\n    return {\n      studentCount: studentCount,\n      tooManyStudentsError: tooManyStudentsError,\n      numberOfTeachersRequired: numberOfTeachersRequired,\n      squareFootage: calculateSquareFootage(studentCount),\n      administrator: calculateAdministrator(ageRange, licensedCapacity, studentCount)\n    };\n  };\n\n  var calculateAdministrator = function calculateAdministrator(ageRange, licensedCapacity, studentCount) {\n    var administratorData;\n    var lc;\n    for (var i = 0; i < licensedCapacity.length; i++) {\n      lc = licensedCapacity[i];\n      if (lc.ageRanges.indexOf(ageRange.id) >= 0) {\n        if (studentCount >= lc.capacity[0] && studentCount <= lc.capacity[1]) {\n          administratorData = lc;\n        }\n      }\n      if (administratorData) {\n        break;\n      }\n    }\n    return administratorData;\n  };\n\n  exports['default'] = Ember['default'].Component.extend({\n    //\n    // TODO: make actions more DRY\n    // TODO: handling of notes is pretty hacky\n    //\n    requiredTeachers: null,\n    actions: {\n      setStudentAge: function setStudentAge(studentAge) {\n        this.set('studentAge', studentAge);\n        if (this.studentAge.notes) {\n          this.set('notes', true);\n        }\n        if (this.studentAge && this.studentCount) {\n          this.set('requiredTeachers', calculateRequiredTeachers(this.studentAge, this.studentCount.value, MA['default'].licensedCapacity));\n          if (this.requiredTeachers.administrator && this.requiredTeachers.administrator.notes) {\n            this.set('notes', true);\n          }\n        }\n      },\n      setStudentCount: function setStudentCount(studentCount) {\n        this.set('studentCount', studentCount);\n        if (this.studentAge && this.studentCount) {\n          this.set('requiredTeachers', calculateRequiredTeachers(this.studentAge, this.studentCount.value, MA['default'].licensedCapacity));\n        }\n        if (this.requiredTeachers.administrator && this.requiredTeachers.administrator.notes) {\n          this.set('notes', true);\n        }\n      }\n    },\n    studentAgeRanges: MA['default'].ageRanges,\n    studentCounts: (function () {\n      var counts = [];\n      var i = 1;\n      while (i <= 30) {\n        counts.push({\n          id: i,\n          value: i\n        });\n        i += 1;\n      }\n      return counts;\n    })()\n  });\n\n});","define('logo-maker/controllers/jurisdiction', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({});\n\n});","define('logo-maker/controllers/logo', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    /*global html2canvas,$*/\n    exports['default'] = Ember['default'].ObjectController.extend({\n        needs: ['application'],\n\n        inventory: (function () {\n            var inventory = this.get('controllers.application').get('model'),\n                palette = inventory.palettes.findBy('id', this.get('palette').id),\n                arrangement = inventory.arrangements.findBy('id', this.get('arrangement').id);\n\n            if (palette) {\n                palette.set('selected', true);\n            }\n            if (arrangement) {\n                arrangement.set('selected', true);\n            }\n\n            return inventory;\n        }).property('controllers.application'),\n\n        selectedFont: (function () {\n            return this.get('inventory').fonts.findBy('id', this.get('font'));\n        }).property('inventory', 'font'),\n\n        flowerObjects: (function () {\n            var allFlowers = this.get('inventory.flowers'),\n                flowerIds = this.get('flowerIds');\n\n            allFlowers.forEach(function (flower) {\n                flower.set('selected', false);\n            });\n\n            return flowerIds.map(function (id) {\n                var f = allFlowers.findBy('id', id);\n                f.set('selected', true);\n                return f;\n            });\n        }).property('flowerIds.[]', 'inventory.flowers.[]'),\n\n        actions: {\n            saveFlower: function saveFlower() {\n                var _this = this;\n\n                html2canvas($('#logo').get(0), {\n                    onrendered: function onrendered(canvas) {\n                        _this.set('dataurl', canvas.toDataURL());\n                        setTimeout(function () {\n                            return $('#download').get(0).click();\n                        }, 0);\n                    }\n                });\n            },\n\n            toggleFlower: function toggleFlower(flower) {\n                var ids = this.get('flowerIds');\n                if (ids.length < 3 || flower.get('selected')) {\n                    var i = ids.indexOf(flower.get('id'));\n                    if (i === -1) {\n                        ids.pushObject(flower.get('id'));\n                    } else {\n                        ids.replace(i, 1);\n                    }\n                }\n            },\n\n            setPalette: function setPalette(palette) {\n                this.set('palette', palette);\n\n                this.get('inventory.palettes').forEach(function (palette) {\n                    palette.set('selected', false);\n                });\n\n                palette.set('selected', true);\n            },\n\n            setArrangement: function setArrangement(a) {\n                this.set('arrangement', a);\n\n                this.get('inventory.arrangements').forEach(function (a) {\n                    a.set('selected', false);\n                });\n\n                a.set('selected', true);\n            },\n\n            setFont: function setFont(font) {\n                this.set('font', font.id);\n            }\n        }\n    });\n\n});","define('logo-maker/initializers/app-version', ['exports', 'logo-maker/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('logo-maker/initializers/export-application-global', ['exports', 'ember', 'logo-maker/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('logo-maker/models/MA', ['exports'], function (exports) {\n\n  'use strict';\n\n\n  var ageRanges = [{\n    id: 0,\n    ageGroup: \"Infant/Toddler Group\",\n    ageRange: \"0 - 33 months\",\n    maxGroupSize: 9,\n    educatorsRequiredPerNumberOfChildren: [[[1, 3], 1], [[4, 9], 2]],\n    educatorChildRatio: \"1:3; one additional educator for 4-9 children\",\n    regulationNumber: \"606 CMR 7.10(9)(c)1 & 606 CMR 7.10(9)(c)2\",\n    educatorQualifications: \"At least one Infant/Toddler Teacher, per 606 CMR 7.09(18)(c)2\",\n    notes: \"No more than 3 infants (up to 15 months old)\"\n  }, {\n    id: 1,\n    ageGroup: \"Toddler/Preschool Group\",\n    ageRange: \"15 months - school age\",\n    maxGroupSize: 9,\n    educatorsRequiredPerNumberOfChildren: [[[1, 5], 1], [[6, 9], 2]],\n    educatorChildRatio: \"1:5; one additional educator for 6-9 children\",\n    regulationNumber: \"606 CMR 7.10(9)(c)1 & 606 CMR 7.10(9)(c)2\",\n    educatorQualifications: \"At least one Infant/Toddler and Preschool Teacher, per 606 CMR 7.09(18)(c)2\"\n  }, {\n    id: 2,\n    ageGroup: \"Preschool/School Age Group\",\n    ageRange: \"33 months - school age\",\n    maxGroupSize: 20,\n    educatorsRequiredPerNumberOfChildren: [[[1, 10], 1], [[11, 20], 2]],\n    educatorChildRatio: \"1:10\",\n    regulationNumber: \"606 CMR 7.10(9)(c)1 & 606 CMR 7.10(9)(c)2\",\n    educatorQualifications: \"At least one Preschool Teacher, per 606 CMR 7.09(18)(c)2\"\n  }, {\n    id: 3,\n    ageGroup: \"Kindergarten/School Age Group\",\n    ageRange: \"Kindergarten (attending 1st grade following year) - school age\",\n    maxGroupSize: 26,\n    educatorsRequiredPerNumberOfChildren: [[[1, 13], 1], [[14, 26], 2]],\n    educatorChildRatio: \"1:13\",\n    regulationNumber: \"606 CMR 7.10(9)(c)1 & 606 CMR 7.10(9)(c)2\",\n    educatorQualifications: \"Group Leader, per 606 CMR 7.09(19)(a)2\"\n  }];\n\n  var licensedCapacity = [{\n    id: 0,\n    regulationNumber: \"606 CMR 7.04(17)(m)9 (a)\",\n    licensedCapacityDisplay: \"No more than ten infant-school-age\",\n    capacity: [1, 10],\n    ageRanges: [0, 1, 2, 3],\n    requiredNonTeachingAdminTime: \"0\",\n    administratorQualifications: \"Family Child Care Provider or Teacher or Site Coordinator\"\n  }, {\n    id: 1,\n    regulationNumber: \"606 CMR 7.04(17)(m)9 (b)\",\n    licensedCapacityDisplay: \"11 through 13 infant-preschool\",\n    capacity: [11, 13],\n    ageRanges: [0, 1, 2, 3],\n    requiredNonTeachingAdminTime: \"0\",\n    administratorQualifications: \"Lead Teacher\"\n  }, {\n    id: 2,\n    regulationNumber: \"606 CMR 7.04(17)(m)9 (d)\",\n    licensedCapacityDisplay: \"14 through 26 infant-preschool\",\n    capacity: [14, 26],\n    ageRanges: [0, 1, 2, 3],\n    requiredNonTeachingAdminTime: \"0\",\n    administratorQualifications: \"Director I\",\n    notes: \"Director I is required for 4 or more hours of operation per day. Less than 4 hours of operation per day requires Lead Teacher.\"\n  }, {\n    id: 3,\n    regulationNumber: \"606 CMR 7.04(17)(m)9 (e)\",\n    licensedCapacityDisplay: \"27 through 39 infant-preschool\",\n    capacity: [27, 39],\n    ageRanges: [0, 1, 2, 3],\n    requiredNonTeachingAdminTime: \"50% FTE\",\n    administratorQualifications: \"Director I\"\n  }\n  //\n  // TODO: where is kindgergarten in this list ?\n  //\n  /*\n  {\n    id: 4,\n    regulationNumber: \"606 CMR 7.04(17)(m)9 (h)\",\n    licensedCapacityDisplay: \"11 through 52 school age children\",\n    capacity: [11,52],\n    ageRanges: [2,3],\n    requiredNonTeachingAdminTime: \"20% FTE\",\n    administratorQualifications: \"School Age Administrator\"\n  }\n  */\n  ];\n\n  exports['default'] = {\n    ageRanges: ageRanges,\n    licensedCapacity: licensedCapacity\n  };\n\n});","define('logo-maker/models/flower', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        location: DS['default'].attr()\n    });\n\n});","define('logo-maker/models/font', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        title: DS['default'].attr(),\n        filename: DS['default'].attr(),\n        location: DS['default'].attr()\n    });\n\n});","define('logo-maker/models/jurisdiction', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  var Jurisdiction = DS['default'].Model.extend({\n    name: DS['default'].attr('string')\n  });\n\n  var createJurisdictionFixtures = function createJurisdictionFixtures() {\n    var usaStates = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District Of Columbia', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n    var jurisdictions = [];\n    usaStates.forEach(function (stateName) {\n      var jd = {\n        id: stateName.toLowerCase().replace(/\\s/g, '-'),\n        name: stateName,\n        bogus: 'foo'\n      };\n      jurisdictions.push(jd);\n    });\n    return jurisdictions;\n  };\n\n  Jurisdiction.reopenClass({\n    FIXTURES: createJurisdictionFixtures()\n  });\n\n  exports['default'] = Jurisdiction;\n\n});","define('logo-maker/models/logo', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        name: DS['default'].attr(),\n        font: DS['default'].attr(),\n        flowerIds: DS['default'].attr(),\n        palette: DS['default'].attr(),\n        arrangement: DS['default'].attr()\n    });\n\n});","define('logo-maker/models/palette', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    exports['default'] = DS['default'].Model.extend({\n        color_1: DS['default'].attr()\n    });\n\n});","define('logo-maker/router', ['exports', 'ember', 'logo-maker/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route('new', { path: '/' });\n    this.route('view', { path: 'view/:logo_id' });\n    this.route('logo', { path: '/:logo_id' });\n    this.route('jurisdiction', { path: 'licensing' }, function () {\n      this.route('view', { path: ':jurisdiction_id' });\n    });\n  });\n\n  exports['default'] = Router;\n\n});","define('logo-maker/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    var fonts = [{\n        name: 'Georgia',\n        className: 'georgia'\n    }, {\n        name: 'Helvetica',\n        className: 'helvetica'\n    }, {\n        name: 'Times New Roman',\n        className: 'times'\n    }, {\n        name: 'Avenir',\n        className: 'avenir'\n    }, {\n        name: 'Kim1',\n        className: 'kim1'\n    }, {\n        name: 'Kim2',\n        className: 'kim2'\n    }, {\n        name: 'Sep',\n        className: 'sep'\n    }, {\n        name: 'Wildchild',\n        className: 'wildchild'\n    }];\n    exports['default'] = Ember['default'].Route.extend({\n        model: function model() {\n            return {\n                flowers: (function () {\n                    var f = [];\n                    for (var i = 1; i < 21; i++) {\n                        f.push(Ember['default'].Object.create({\n                            location: '/assets/img/flower' + i + '.png',\n                            id: i\n                        }));\n                    }\n                    return f;\n                })(),\n                fonts: (function () {\n                    var f = [];\n                    for (var i = 0; i < fonts.length; i++) {\n                        fonts[i].id = i + 1;\n                        f.push(Ember['default'].Object.create(fonts[i]));\n                    }\n                    return f;\n                })(),\n                palettes: [Ember['default'].Object.create({\n                    id: 1,\n                    colors: ['#1ab6f5', '#1a86f5']\n                }), Ember['default'].Object.create({\n                    id: 2,\n                    colors: ['#079d66', '#73c412']\n                }), Ember['default'].Object.create({\n                    id: 3,\n                    colors: ['#e5b113', '#e57613']\n                }), Ember['default'].Object.create({\n                    id: 4,\n                    colors: ['#4f03fc', '#893cfd']\n                }), Ember['default'].Object.create({\n                    id: 5,\n                    colors: ['#bb6de1', '#9f37b5']\n                }), Ember['default'].Object.create({\n                    id: 6,\n                    colors: ['#ff3c00', '#e5b113', '#e57613', '#cb0ab2', '#c0b405', '#7cc005']\n                }), Ember['default'].Object.create({\n                    id: 7,\n                    colors: ['#079d66', '#73c412', '#e5b113', '#e57613', '#fc5c05', '#c0b405']\n                }), Ember['default'].Object.create({\n                    id: 8,\n                    colors: ['#bb6de1', '#c91153', '#cb0ab2', '#6363f3', '#3093f8', '#044ed5']\n                })],\n                arrangements: [Ember['default'].Object.create({\n                    id: 1,\n                    className: 'top'\n                }), Ember['default'].Object.create({\n                    id: 2,\n                    className: 'bottom'\n                }), Ember['default'].Object.create({\n                    id: 3,\n                    className: 'left'\n                }), Ember['default'].Object.create({\n                    id: 4,\n                    className: 'right'\n                })]\n            };\n        }\n    });\n\n});","define('logo-maker/routes/jurisdiction/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.find('jurisdiction');\n    }\n  });\n\n});","define('logo-maker/routes/jurisdiction/view', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model(params) {\n      return this.store.find('jurisdiction', params.jurisdiction_id);\n    }\n  });\n\n});","define('logo-maker/routes/new', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].Route.extend({\n        renderTemplate: function renderTemplate() {\n            this.render('logo', { controller: 'logo' });\n        },\n        model: function model() {\n            return Ember['default'].Object.create({\n                flowerIds: [],\n                name: '',\n                arrangement: { id: null, className: null },\n                font: null,\n                palette: { id: null, colors: [] }\n            });\n        },\n        setupController: function setupController(controller, model) {\n            this.controllerFor('logo').set('model', model);\n        }\n    });\n\n});","define('logo-maker/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/components/font-dropdown', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          dom.setAttribute(el1,\"class\",\"dropdown-item\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"button\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var element1 = dom.childAt(element0, [1]);\n          var morph0 = dom.createMorphAt(element1,0,0);\n          element(env, element0, context, \"action\", [\"selectFont\", get(env, context, \"f\")], {});\n          element(env, element1, context, \"bind-attr\", [], {\"class\": \":dropdown-option f.className\"});\n          content(env, morph0, context, \"f.name\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"span\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        dom.setAttribute(el1,\"class\",\"dropdown-list\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element2 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element2,0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        element(env, element2, context, \"bind-attr\", [], {\"class\": \":dropdown-label selectedFont.className\"});\n        content(env, morph0, context, \"selectedFont.name\");\n        block(env, morph1, context, \"each\", [get(env, context, \"fonts\")], {\"keyword\": \"f\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/components/jurisdiction-dropdown', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            content(env, morph0, context, \"j.name\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          dom.setAttribute(el1,\"class\",\"dropdown-item\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          element(env, element0, context, \"action\", [\"setJurisdiction\", get(env, context, \"j\")], {});\n          block(env, morph0, context, \"link-to\", [\"jurisdiction.view\", get(env, context, \"j\")], {\"class\": \"dropdown-option\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"class\",\"dropdown-label\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        dom.setAttribute(el1,\"class\",\"dropdown-list jurisdiction-dropdown\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n        content(env, morph0, context, \"selectedJurisdiction.name\");\n        block(env, morph1, context, \"each\", [get(env, context, \"jurisdictions\")], {\"keyword\": \"j\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/components/letter-split', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"span\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0]);\n          var morph0 = dom.createMorphAt(element0,0,0);\n          element(env, element0, context, \"bind-attr\", [], {\"style\": get(env, context, \"l.colorStyle\")});\n          content(env, morph0, context, \"l.letter\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"each\", [get(env, context, \"letters\")], {\"keyword\": \"l\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/components/logo-view', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createElement(\"img\");\n          dom.setAttribute(el2,\"class\",\"logo-image\");\n          dom.setAttribute(el2,\"alt\",\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 0]);\n          element(env, element0, context, \"bind-attr\", [], {\"src\": get(env, context, \"flower.location\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"logo-images\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [2]);\n        var element2 = dom.childAt(element1, [3]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(element1,1,1);\n        var morph2 = dom.createMorphAt(element2,1,1);\n        block(env, morph0, context, \"each\", [get(env, context, \"flowerObjects\")], {\"keyword\": \"flower\"}, child0, null);\n        element(env, element1, context, \"bind-attr\", [], {\"class\": \":logo-textbox selectedFont.className\"});\n        inline(env, morph1, context, \"letter-split\", [], {\"text\": get(env, context, \"name\"), \"palette\": get(env, context, \"palette\"), \"class\": \"logo-title\", \"size\": get(env, context, \"size\")});\n        element(env, element2, context, \"bind-attr\", [], {\"class\": \":logo-hide name::hide\"});\n        inline(env, morph2, context, \"letter-split\", [], {\"text\": \"Montessori School\", \"palette\": get(env, context, \"palette\"), \"class\": \"logo-subtitle\", \"size\": get(env, context, \"size\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/components/num-students-by-sq-ft', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"licensing-step-output\");\n          var el2 = dom.createTextNode(\"\\n\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"inputs-display\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"student-count-display inputs-display-input\");\n          var el4 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" square ft\\n            \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"outputs-display\");\n          var el3 = dom.createTextNode(\"\\n\\n              \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"display-entry\");\n          var el4 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"display-property\");\n          var el5 = dom.createTextNode(\"\\n                  Number of students:\\n                \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"display-value\");\n          var el5 = dom.createTextNode(\"\\n                  \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createTextNode(\" \\n                \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n\\n          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1, 1]),1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element0, [3, 1, 3]),1,1);\n          content(env, morph0, context, \"sqft.value\");\n          content(env, morph1, context, \"studentCount\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"num-students-by-sq-ft licensing-step\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"licensing-step-header\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        var el4 = dom.createTextNode(\"Number of students by square footage\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"licensing-step-body\");\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"licensing-step-input input-col\");\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"licensing-step-input-container\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"label\");\n        dom.setAttribute(el5,\"for\",\"studentAgeDropdown\");\n        var el6 = dom.createTextNode(\"\\n          What is the square footage of the classroom?\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"box box--flush dropdown licensing-step-control\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"output-col\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [1, 3]);\n        var morph0 = dom.createMorphAt(dom.childAt(element1, [1, 1, 3]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element1, [3]),1,1);\n        inline(env, morph0, context, \"sqft-dropdown\", [], {\"id\": \"sqFtDropdown\", \"selectedStudentAge\": get(env, context, \"selectedSqFt\"), \"action\": \"setSqFt\", \"sqfts\": get(env, context, \"sqfts\")});\n        block(env, morph1, context, \"if\", [get(env, context, \"studentCount\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/components/palette-box', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": \"isBigPalette:six-color:two-color\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"button\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"palette\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(dom.childAt(element1, [1]),1,1);\n        element(env, element1, context, \"bind-attr\", [], {\"class\": \":btn :btn--highlight :btn--square palette.selected\"});\n        element(env, element1, context, \"action\", [\"setPalette\", get(env, context, \"palette\")], {});\n        block(env, morph0, context, \"each\", [get(env, context, \"palette.colors\")], {\"keyword\": \"color\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/components/sqft-dropdown', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          dom.setAttribute(el1,\"class\",\"dropdown-item\");\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"dropdown-option\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n          element(env, element0, context, \"action\", [\"selectSqFt\", get(env, context, \"sqft\")], {});\n          content(env, morph0, context, \"sqft.value\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"class\",\"dropdown-label\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        dom.setAttribute(el1,\"class\",\"dropdown-list\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n        content(env, morph0, context, \"selectedSqFt.value\");\n        block(env, morph1, context, \"each\", [get(env, context, \"sqfts\")], {\"keyword\": \"sqft\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/components/student-age-dropdown', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          dom.setAttribute(el1,\"class\",\"dropdown-item\");\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"dropdown-option\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n          element(env, element0, context, \"action\", [\"selectStudentAge\", get(env, context, \"ageRange\")], {});\n          content(env, morph0, context, \"ageRange.ageRange\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"class\",\"dropdown-label\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        dom.setAttribute(el1,\"class\",\"dropdown-list student-age-dropdown\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n        content(env, morph0, context, \"selectedStudentAge.ageRange\");\n        block(env, morph1, context, \"each\", [get(env, context, \"studentAgeRanges\")], {\"keyword\": \"ageRange\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/components/student-count-dropdown', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          dom.setAttribute(el1,\"class\",\"dropdown-item\");\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"dropdown-option\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n          element(env, element0, context, \"action\", [\"selectStudentCount\", get(env, context, \"count\")], {});\n          content(env, morph0, context, \"count.value\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"class\",\"dropdown-label\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        dom.setAttribute(el1,\"class\",\"dropdown-list student-count-dropdown\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n        content(env, morph0, context, \"selectedStudentCount.value\");\n        block(env, morph1, context, \"each\", [get(env, context, \"studentCounts\")], {\"keyword\": \"count\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/components/teacher-requirements', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"display-entry error-message\");\n            var el2 = dom.createTextNode(\"\\n                Exceeds maximum group size of \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n            content(env, morph0, context, \"studentAge.maxGroupSize\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"div\");\n              dom.setAttribute(el1,\"class\",\"number-of-teachers-required display-entry\");\n              var el2 = dom.createTextNode(\"\\n                  \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"div\");\n              dom.setAttribute(el2,\"class\",\"display-property\");\n              var el3 = dom.createTextNode(\"\\n                    Notes:\\n                  \");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                  \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"div\");\n              dom.setAttribute(el2,\"class\",\"display-value\");\n              var el3 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createElement(\"div\");\n              var el4 = dom.createTextNode(\"\\n                      \");\n              dom.appendChild(el3, el4);\n              var el4 = dom.createComment(\"\");\n              dom.appendChild(el3, el4);\n              var el4 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el3, el4);\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createElement(\"div\");\n              var el4 = dom.createTextNode(\"\\n                      \");\n              dom.appendChild(el3, el4);\n              var el4 = dom.createComment(\"\");\n              dom.appendChild(el3, el4);\n              var el4 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el3, el4);\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"\\n                  \");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var element0 = dom.childAt(fragment, [1, 3]);\n              var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n              var morph1 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n              content(env, morph0, context, \"studentAge.notes\");\n              content(env, morph1, context, \"requiredTeachers.administrator.notes\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"number-of-teachers-required display-entry\");\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"display-property\");\n            var el3 = dom.createTextNode(\"\\n                  Regulations:\\n                \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"display-value\");\n            var el3 = dom.createTextNode(\"\\n                  \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\" \\n                \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"number-of-teachers-required display-entry\");\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"display-property\");\n            var el3 = dom.createTextNode(\"\\n                  Teachers required:\\n                \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"display-value\");\n            var el3 = dom.createTextNode(\"\\n                  \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\" \\n                \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"number-of-teachers-required display-entry\");\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"display-property\");\n            var el3 = dom.createTextNode(\"\\n                  Educator Qualifications:\\n                \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"display-value\");\n            var el3 = dom.createTextNode(\"\\n                  \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\" \\n                \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n\\n              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"number-of-teachers-required display-entry\");\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"display-property\");\n            var el3 = dom.createTextNode(\"\\n                  Admin Qualifications:\\n                \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"display-value\");\n            var el3 = dom.createTextNode(\"\\n                  \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\" \\n                \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"number-of-teachers-required display-entry\");\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"display-property\");\n            var el3 = dom.createTextNode(\"\\n                  Min Square Ft:\\n                \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n                \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"display-value\");\n            var el3 = dom.createTextNode(\"\\n                  \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\" square feet \\n                \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n              \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 3]),1,1);\n            var morph1 = dom.createMorphAt(dom.childAt(fragment, [3, 3]),1,1);\n            var morph2 = dom.createMorphAt(dom.childAt(fragment, [5, 3]),1,1);\n            var morph3 = dom.createMorphAt(dom.childAt(fragment, [7, 3]),1,1);\n            var morph4 = dom.createMorphAt(fragment,9,9,contextualElement);\n            var morph5 = dom.createMorphAt(dom.childAt(fragment, [11, 3]),1,1);\n            content(env, morph0, context, \"studentAge.regulationNumber\");\n            content(env, morph1, context, \"requiredTeachers.numberOfTeachersRequired\");\n            content(env, morph2, context, \"studentAge.educatorQualifications\");\n            content(env, morph3, context, \"requiredTeachers.administrator.administratorQualifications\");\n            block(env, morph4, context, \"if\", [get(env, context, \"notes\")], {}, child0, null);\n            content(env, morph5, context, \"requiredTeachers.squareFootage\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"teachers-required-output licensing-step-output\");\n          var el2 = dom.createTextNode(\"\\n\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"inputs-display\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"student-count-display inputs-display-input\");\n          var el4 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" students\\n            \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"age-range-display inputs-display-input\");\n          var el4 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"outputs-display\");\n          var el3 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1]);\n          var element2 = dom.childAt(element1, [1]);\n          var element3 = dom.childAt(element1, [3]);\n          var morph0 = dom.createMorphAt(dom.childAt(element2, [1]),1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element2, [3]),1,1);\n          var morph2 = dom.createMorphAt(element3,1,1);\n          var morph3 = dom.createMorphAt(element3,3,3);\n          content(env, morph0, context, \"requiredTeachers.studentCount\");\n          content(env, morph1, context, \"studentAge.ageRange\");\n          block(env, morph2, context, \"if\", [get(env, context, \"requiredTeachers.tooManyStudentsError\")], {}, child0, null);\n          block(env, morph3, context, \"unless\", [get(env, context, \"requiredTeachers.tooManyStudentsError\")], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"teacher-requirements licensing-step\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"licensing-step-header\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        var el4 = dom.createTextNode(\"Teacher and Building Requirements by Student Age and Number of Students\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"licensing-step-body\");\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"licensing-step-input input-col\");\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"licensing-step-input-container\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"label\");\n        dom.setAttribute(el5,\"for\",\"studentAgeDropdown\");\n        var el6 = dom.createTextNode(\"\\n          What age are your students?\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"box box--flush dropdown licensing-step-control\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"licensing-step-input-container\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"label\");\n        dom.setAttribute(el5,\"for\",\"studentCountDropdown\");\n        var el6 = dom.createTextNode(\"\\n          How many students do you have?\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"box box--flush dropdown licensing-step-control\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"output-col\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element4 = dom.childAt(fragment, [1, 3]);\n        var element5 = dom.childAt(element4, [1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element5, [1, 3]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element5, [3, 3]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element4, [3]),1,1);\n        inline(env, morph0, context, \"student-age-dropdown\", [], {\"id\": \"stuentAgeDropdown\", \"selectedStudentAge\": get(env, context, \"selectedStudentAge\"), \"action\": \"setStudentAge\", \"studentAgeRanges\": get(env, context, \"studentAgeRanges\")});\n        inline(env, morph1, context, \"student-count-dropdown\", [], {\"id\": \"studentCountDropdown\", \"selectedStudentAge\": get(env, context, \"selectedStudentCount\"), \"action\": \"setStudentCount\", \"studentCounts\": get(env, context, \"studentCounts\")});\n        block(env, morph2, context, \"if\", [get(env, context, \"requiredTeachers\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/jurisdiction', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"licensing\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/jurisdiction/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"index-header\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        var el3 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" Licensing\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n  \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"widget jurisdiction-selector\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"get-started\");\n        var el3 = dom.createTextNode(\"\\n      Choose a state to get started\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"box box--flush dropdown\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [3, 3]),1,1);\n        content(env, morph0, context, \"model.name\");\n        inline(env, morph1, context, \"jurisdiction-dropdown\", [], {\"jurisdictions\": get(env, context, \"model\"), \"selectedJurisdiction\": get(env, context, \"selectedJurisdiction\"), \"action\": \"setJurisdiction\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/jurisdiction/view', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Choose a different State\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      Number of students by square footage\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      Number of students by number of teachers and student age\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"header\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" Licensing\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"to-jurisdiction-index\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"scenario-selector\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"scenarios-label\");\n        var el3 = dom.createTextNode(\"\\n    Scenarios\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"scenario-entry\");\n        var el3 = dom.createTextNode(\"\\n\\n      Teacher requirements and square footage by student age and number of students\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"scenario-entry\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"scenario-entry\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, block = hooks.block, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [1]);\n        var element1 = dom.childAt(fragment, [3]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [1, 1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element0, [3, 1]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element1, [5]),1,1);\n        var morph3 = dom.createMorphAt(dom.childAt(element1, [7]),1,1);\n        var morph4 = dom.createMorphAt(fragment,5,5,contextualElement);\n        var morph5 = dom.createMorphAt(fragment,7,7,contextualElement);\n        content(env, morph0, context, \"model.name\");\n        block(env, morph1, context, \"link-to\", [\"jurisdiction\"], {}, child0, null);\n        block(env, morph2, context, \"link-to\", [\"jurisdiction.view\", get(env, context, \"model.id\")], {}, child1, null);\n        block(env, morph3, context, \"link-to\", [\"jurisdiction.view\", get(env, context, \"model.id\")], {}, child2, null);\n        inline(env, morph4, context, \"teacher-requirements\", [], {\"model\": get(env, context, \"model\")});\n        inline(env, morph5, context, \"num-students-by-sq-ft\", [], {\"model\": get(env, context, \"model\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/jurisdictions', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"licensing\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/templates/logo', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"grid-item\");\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"button\");\n          var el3 = dom.createElement(\"img\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1, 1]);\n          var element2 = dom.childAt(element1, [0]);\n          element(env, element1, context, \"action\", [\"toggleFlower\", get(env, context, \"flower\")], {});\n          element(env, element1, context, \"bind-attr\", [], {\"class\": \":btn :btn--image flower.selected\"});\n          element(env, element2, context, \"bind-attr\", [], {\"src\": get(env, context, \"flower.location\")});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"palette-box\", [], {\"palette\": get(env, context, \"palette\"), \"setPalette\": \"setPalette\"});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"grid-item\");\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"button\");\n          var el3 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"logo--small\");\n          var el4 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                        \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": \":btn :btn--highlight a.selected\"});\n          element(env, element0, context, \"action\", [\"setArrangement\", get(env, context, \"a\")], {});\n          inline(env, morph0, context, \"logo-view\", [], {\"size\": \"small\", \"arrangement\": get(env, context, \"a.className\"), \"flowerObjects\": get(env, context, \"flowerObjects\"), \"selectedFont\": get(env, context, \"selectedFont\"), \"name\": get(env, context, \"name\"), \"palette\": get(env, context, \"palette\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"section\");\n        dom.setAttribute(el1,\"class\",\"l-sidebar l-sidebar--highlight\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"box\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"article\");\n        dom.setAttribute(el2,\"class\",\"widget\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"label\");\n        dom.setAttribute(el3,\"class\",\"widget-label\");\n        dom.setAttribute(el3,\"for\",\"\");\n        var el4 = dom.createTextNode(\"Enter your school name:\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"article\");\n        dom.setAttribute(el2,\"class\",\"widget\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"label\");\n        dom.setAttribute(el3,\"class\",\"widget-label\");\n        dom.setAttribute(el3,\"for\",\"\");\n        var el4 = dom.createTextNode(\"Choose a font:\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"box box--flush\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"article\");\n        dom.setAttribute(el2,\"class\",\"widget\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"widget-label\");\n        dom.setAttribute(el3,\"for\",\"\");\n        var el4 = dom.createTextNode(\"Choose up to 3 flowers:\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"box box--scroll\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"grid grid--three grid--lines\");\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"gap\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\" .grid \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\" .box \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\" .widget \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"article\");\n        dom.setAttribute(el2,\"class\",\"widget\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"widget-label\");\n        var el4 = dom.createTextNode(\"Choose a color palette:\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"box\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"grid grid--three\");\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"gap\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\" .grid \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\" .box \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\" .widget \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"article\");\n        dom.setAttribute(el2,\"class\",\"widget\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"widget-label\");\n        var el4 = dom.createTextNode(\"Choose an arrangement:\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"box\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"grid grid--two\");\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\" .grid \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\" .box \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\" .widget \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" .l-sidebar \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"main\");\n        dom.setAttribute(el1,\"class\",\"l-content\");\n        dom.setAttribute(el1,\"id\",\"content\");\n        var el2 = dom.createTextNode(\"        \\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"l-lowerright\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"class\",\"btn btn--download\");\n        var el4 = dom.createTextNode(\"Download \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"btn-icon\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"id\",\"download\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" .l-content \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline, get = hooks.get, block = hooks.block, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element3 = dom.childAt(fragment, [0]);\n        var element4 = dom.childAt(fragment, [4]);\n        var element5 = dom.childAt(element4, [3]);\n        var element6 = dom.childAt(element5, [1]);\n        var element7 = dom.childAt(element5, [3]);\n        var morph0 = dom.createMorphAt(dom.childAt(element3, [1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element3, [3]),3,3);\n        var morph2 = dom.createMorphAt(dom.childAt(element3, [5, 3]),1,1);\n        var morph3 = dom.createMorphAt(dom.childAt(element3, [7, 3, 1]),1,1);\n        var morph4 = dom.createMorphAt(dom.childAt(element3, [11, 3, 1]),1,1);\n        var morph5 = dom.createMorphAt(dom.childAt(element3, [15, 3, 1]),1,1);\n        var morph6 = dom.createMorphAt(element4,1,1);\n        inline(env, morph0, context, \"link-to\", [\"Go To Licensing\", \"jurisdiction\"], {});\n        inline(env, morph1, context, \"input\", [], {\"class\": \"widget-input\", \"type\": \"text\", \"value\": get(env, context, \"model.name\")});\n        inline(env, morph2, context, \"font-dropdown\", [], {\"fonts\": get(env, context, \"inventory.fonts\"), \"selectedFont\": get(env, context, \"selectedFont\"), \"action\": \"setFont\"});\n        block(env, morph3, context, \"each\", [get(env, context, \"inventory.flowers\")], {\"keyword\": \"flower\"}, child0, null);\n        block(env, morph4, context, \"each\", [get(env, context, \"inventory.palettes\")], {\"keyword\": \"palette\"}, child1, null);\n        block(env, morph5, context, \"each\", [get(env, context, \"inventory.arrangements\")], {\"keyword\": \"a\"}, child2, null);\n        inline(env, morph6, context, \"logo-view\", [], {\"view\": \"main\", \"arrangement\": get(env, context, \"arrangement.className\"), \"flowerObjects\": get(env, context, \"flowerObjects\"), \"selectedFont\": get(env, context, \"selectedFont\"), \"name\": get(env, context, \"name\"), \"palette\": get(env, context, \"palette\")});\n        element(env, element6, context, \"action\", [\"saveFlower\"], {});\n        element(env, element7, context, \"bind-attr\", [], {\"href\": get(env, context, \"dataurl\"), \"download\": get(env, context, \"name\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('logo-maker/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/components/fabric-canvas.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/fabric-canvas.js should pass jshint', function() { \n    ok(true, 'components/fabric-canvas.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/components/font-dropdown.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/font-dropdown.js should pass jshint', function() { \n    ok(true, 'components/font-dropdown.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/components/jurisdiction-dropdown.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/jurisdiction-dropdown.js should pass jshint', function() { \n    ok(true, 'components/jurisdiction-dropdown.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/components/letter-split.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/letter-split.js should pass jshint', function() { \n    ok(true, 'components/letter-split.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/components/logo-view.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/logo-view.js should pass jshint', function() { \n    ok(true, 'components/logo-view.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/components/num-students-by-sq-ft.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/num-students-by-sq-ft.js should pass jshint', function() { \n    ok(true, 'components/num-students-by-sq-ft.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/components/palette-box.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/palette-box.js should pass jshint', function() { \n    ok(true, 'components/palette-box.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/components/sqft-dropdown.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/sqft-dropdown.js should pass jshint', function() { \n    ok(true, 'components/sqft-dropdown.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/components/student-age-dropdown.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/student-age-dropdown.js should pass jshint', function() { \n    ok(true, 'components/student-age-dropdown.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/components/student-count-dropdown.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/student-count-dropdown.js should pass jshint', function() { \n    ok(true, 'components/student-count-dropdown.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/components/teacher-requirements.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/teacher-requirements.js should pass jshint', function() { \n    ok(true, 'components/teacher-requirements.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/controllers/jurisdiction.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/jurisdiction.js should pass jshint', function() { \n    ok(true, 'controllers/jurisdiction.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/controllers/logo.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/logo.js should pass jshint', function() { \n    ok(true, 'controllers/logo.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/helpers/resolver', ['exports', 'ember/resolver', 'logo-maker/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('logo-maker/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/helpers/start-app', ['exports', 'ember', 'logo-maker/app', 'logo-maker/router', 'logo-maker/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('logo-maker/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/models/MA.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/MA.js should pass jshint', function() { \n    ok(true, 'models/MA.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/models/flower.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/flower.js should pass jshint', function() { \n    ok(true, 'models/flower.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/models/font.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/font.js should pass jshint', function() { \n    ok(true, 'models/font.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/models/jurisdiction.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/jurisdiction.js should pass jshint', function() { \n    ok(true, 'models/jurisdiction.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/models/logo.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/logo.js should pass jshint', function() { \n    ok(true, 'models/logo.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/models/palette.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/palette.js should pass jshint', function() { \n    ok(true, 'models/palette.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/application.js should pass jshint', function() { \n    ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/routes/jurisdiction/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/jurisdiction');\n  test('routes/jurisdiction/index.js should pass jshint', function() { \n    ok(true, 'routes/jurisdiction/index.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/routes/jurisdiction/view.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/jurisdiction');\n  test('routes/jurisdiction/view.js should pass jshint', function() { \n    ok(true, 'routes/jurisdiction/view.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/routes/new.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/new.js should pass jshint', function() { \n    ok(true, 'routes/new.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/test-helper', ['logo-maker/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('logo-maker/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/unit/components/font-dropdown-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('font-dropdown', 'FontDropdownComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.render();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('logo-maker/tests/unit/components/font-dropdown-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/font-dropdown-test.js should pass jshint', function() { \n    ok(true, 'unit/components/font-dropdown-test.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/unit/components/num-students-by-sq-ft-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('num-students-by-sq-ft', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // Renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('logo-maker/tests/unit/components/num-students-by-sq-ft-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/num-students-by-sq-ft-test.js should pass jshint', function() { \n    ok(true, 'unit/components/num-students-by-sq-ft-test.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/unit/components/sqft-dropdown-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('sqft-dropdown', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // Renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('logo-maker/tests/unit/components/sqft-dropdown-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/sqft-dropdown-test.js should pass jshint', function() { \n    ok(true, 'unit/components/sqft-dropdown-test.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/unit/components/student-age-dropdown-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('student-age-dropdown', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // Renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('logo-maker/tests/unit/components/student-age-dropdown-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/student-age-dropdown-test.js should pass jshint', function() { \n    ok(true, 'unit/components/student-age-dropdown-test.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/unit/components/student-count-dropdown-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('student-count-dropdown', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // Renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('logo-maker/tests/unit/components/student-count-dropdown-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/student-count-dropdown-test.js should pass jshint', function() { \n    ok(true, 'unit/components/student-count-dropdown-test.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/unit/components/teacher-requirements-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('teacher-requirements', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // Renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('logo-maker/tests/unit/components/teacher-requirements-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/teacher-requirements-test.js should pass jshint', function() { \n    ok(true, 'unit/components/teacher-requirements-test.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/unit/models/flower-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('flower', 'Flower', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('logo-maker/tests/unit/models/flower-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/flower-test.js should pass jshint', function() { \n    ok(true, 'unit/models/flower-test.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/unit/models/font-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('font', 'Font', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('logo-maker/tests/unit/models/font-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/font-test.js should pass jshint', function() { \n    ok(true, 'unit/models/font-test.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/unit/models/logo-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('logo', 'Logo', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('logo-maker/tests/unit/models/logo-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/logo-test.js should pass jshint', function() { \n    ok(true, 'unit/models/logo-test.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/unit/models/palette-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('palette', 'Palette', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('logo-maker/tests/unit/models/palette-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/palette-test.js should pass jshint', function() { \n    ok(true, 'unit/models/palette-test.js should pass jshint.'); \n  });\n\n});","define('logo-maker/tests/views/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/application.js should pass jshint', function() { \n    ok(true, 'views/application.js should pass jshint.'); \n  });\n\n});","define('logo-maker/views/application', ['exports', 'ember'], function (exports, Ember) {\n\n    'use strict';\n\n    exports['default'] = Ember['default'].View.extend({\n        classNames: ['l-full']\n    });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('logo-maker/config/environment', ['ember'], function(Ember) {\n  var prefix = 'logo-maker';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"logo-maker/tests/test-helper\");\n} else {\n  require(\"logo-maker/app\")[\"default\"].create({\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true,\"name\":\"logo-maker\",\"version\":\"0.0.0.20df650c\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClrpzvxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvtxdrpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"logo-maker.js"}